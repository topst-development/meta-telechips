From 1f8b103ef64a62780489f17f279acb7b4f091d74 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Mon, 16 May 2022 01:57:39 -0700
Subject: [PATCH] HttpDownloader: save download tarball to distdir

It is helpful for collecting tarball url which supports offline build.

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 .../downloader/DownloadManager.java           | 62 ++++++++++++-------
 1 file changed, 38 insertions(+), 24 deletions(-)

diff --git a/src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java b/src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java
index b8c1fdf240..b190f2876a 100644
--- a/src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java
+++ b/src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java
@@ -197,33 +197,36 @@ public class DownloadManager {
         } else if (!dir.isDirectory()) {
           eventHandler.handle(Event.warn("distdir " + dir + " is not a directory"));
         } else {
-          for (String name : candidateFileNames) {
+          for (String candidateFileName : candidateFileNames) {
             boolean match = false;
-            Path candidate = dir.getRelative(name);
-            try {
-              eventHandler.post(
-                  new CacheProgress(
-                      mainUrl.toString(), "Checking " + cacheKeyType + " of " + candidate));
-              match = RepositoryCache.getChecksum(cacheKeyType, candidate).equals(cacheKey);
-            } catch (IOException e) {
-              // Not finding anything in a distdir is a normal case, so handle it absolutely
-              // quietly. In fact, it is common to specify a whole list of dist dirs,
-              // with the assumption that only one will contain an entry.
-            } finally {
-              eventHandler.post(new CacheProgress(mainUrl.toString()));
-            }
-            if (match) {
-              if (isCachingByProvidedChecksum) {
-                try {
-                  repositoryCache.put(cacheKey, candidate, cacheKeyType, canonicalId);
-                } catch (IOException e) {
-                  eventHandler.handle(
-                      Event.warn("Failed to copy " + candidate + " to repository cache: " + e));
+            String[] names = {candidateFileName, candidateFileName+"_"+cacheKey};
+            for (String name: names) {
+              Path candidate = dir.getRelative(name);
+              try {
+                eventHandler.post(
+                    new CacheProgress(
+                        mainUrl.toString(), "Checking " + cacheKeyType + " of " + candidate));
+                match = RepositoryCache.getChecksum(cacheKeyType, candidate).equals(cacheKey);
+              } catch (IOException e) {
+                // Not finding anything in a distdir is a normal case, so handle it absolutely
+                // quietly. In fact, it is common to specify a whole list of dist dirs,
+                // with the assumption that only one will contain an entry.
+              } finally {
+                eventHandler.post(new CacheProgress(mainUrl.toString()));
+              }
+              if (match) {
+                if (isCachingByProvidedChecksum) {
+                  try {
+                    repositoryCache.put(cacheKey, candidate, cacheKeyType, canonicalId);
+                  } catch (IOException e) {
+                    eventHandler.handle(
+                        Event.warn("Failed to copy " + candidate + " to repository cache: " + e));
+                  }
                 }
+                FileSystemUtils.createDirectoryAndParents(destination.getParentDirectory());
+                FileSystemUtils.copyFile(candidate, destination);
+                return destination;
               }
-              FileSystemUtils.createDirectoryAndParents(destination.getParentDirectory());
-              FileSystemUtils.copyFile(candidate, destination);
-              return destination;
             }
           }
         }
@@ -267,6 +270,17 @@ public class DownloadManager {
       repositoryCache.put(destination, KeyType.SHA256, canonicalId);
     }
 
+    for (Path dir : distdir) {
+      if (!dir.exists())
+        FileSystemUtils.createDirectoryAndParents(dir);
+
+      if (dir.isDirectory()) {
+        Path dl_mirror = dir.getRelative(destination.getBaseName()+"_"+checksum.get().toString());
+        if (!dl_mirror.exists())
+            FileSystemUtils.copyFile(destination, dl_mirror);
+      }
+    }
+
     return destination;
   }
 
-- 
2.36.0

